<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvx.xsd
        http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util.xsd
        ">
        <import resource="spring-dao.xml"/>
        <import resource="spring-redis.xml"/>
        <context:component-scan base-package="com.zz"></context:component-scan>
        <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        	<property name="securityManager" ref="securityManager"></property>
        	<!-- 登录的初始界面 -->
        	<property name="loginUrl" value="login.html"></property>
        	<!-- 没有权限跳转的页面 -->
        	<property name="unauthorizedUrl" value="403.html"></property>
        	<property name="filterChainDefinitions">
        		<value>
        			/login.html = anon
        			/subLogin = anon
        			/remember = user
        			<!-- 角色判断可以放在过滤器中做 -->
        			<!-- /testroles = roles["admin"]
        			/testperms = perms["user:update"] -->
        			<!-- 这个是要2个权限都满足才能访问 -->
        			/testroles1 = roles["admin","admin1"]
        			<!-- 自定义的可以自己写逻辑判断 -->
        			/testroles = rolesOr["admin","admin1"]
        			/* = authc
        		</value>
        	</property>
        	<property name="filters">
        		<util:map>
        			<entry key="rolesOr" value-ref="rolesOrFilter" />
        		</util:map>
        	</property>
        </bean>
        
        <bean class="com.zz.filter.RolesOrFilter" id="rolesOrFilter" />
        
        <bean class="org.apache.shiro.web.mgt.DefaultWebSecurityManager" id="securityManager">
        	<property name="realm" ref="realm"/>
        	<property name="sessionManager" ref="sessionManager" />
        	<property name="cacheManager" ref="redisCacheManager" />
        	<property name="rememberMeManager" ref="rememberMeManager" />
        </bean>
        
        <bean class="com.zz.realm.CustomerRealm" id="realm">
        	<property name="credentialsMatcher" ref="credentialsMatcher"></property>
        </bean>
        
        <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher" id="credentialsMatcher">
        	<property name="hashAlgorithmName" value="md5"></property>
        	<property name="hashIterations" value="1"></property>
        </bean>
        
        <bean class="com.zz.session.CustomSessionManager" id="sessionManager">
        	<property name="sessionDAO" ref="redisSession"></property>
        </bean>
        
        <bean class="com.zz.session.RedisSession" id="redisSession"/>
        
        <bean class="com.zz.cache.RedisCacheManager" id="redisCacheManager"/>
        
        <bean class="org.apache.shiro.web.mgt.CookieRememberMeManager" id="rememberMeManager">
        	<property name="cookie" ref="simpleCookie"></property>
        </bean>
        
        <bean class="org.apache.shiro.web.servlet.SimpleCookie" id="simpleCookie">
        	<constructor-arg value="rememberMe"/>
        	<property name="maxAge" value="3600000"></property>
        	
        </bean>
        
</beans>